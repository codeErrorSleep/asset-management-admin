type LoginReq struct {
  Username string `json:"username"`
  Password string `json:"password"`
  Captcha  string `json:"captcha"`
}

type AuthPwReq struct {
  NewPassword string `form:"newPassword"`
  OldPassword string `form:"oldPassword"`
}

type PatchUserReq struct {
  Id       int64   `path:"id"`
  Enable   bool   `json:"enable,omitempty"`
  RoleIds  []int64 `json:"roleIds,omitempty"`
  Password string `json:"password,omitempty"`
  Username string `json:"username,omitempty"`
}

type PatchProfileUserReq struct {
  Id       int64   `path:"id"`
  Gender   int64   `json:"gender"`
  NickName string `json:"nickName"`
  Address  string `json:"address"`
  Email    string `json:"email"`
}

type EnableRoleReq struct {
  Enable bool   `json:"enable"`
  Id     int64 `path:"id"`
}

type AddUserReq struct {
  Username string  `json:"username"`
  Password string  `json:"password"`
  Enable   bool    `json:"enable"`
  RoleIds  []int64 `json:"roleIds"`
}

type AddRoleReq struct {
  Code          string  `json:"code"`
  Enable        bool    `json:"enable"`
  Name          string  `json:"name"`
  PermissionIds []int64 `json:"permissionIds"`
}

type PatchRoleReq struct {
  Id            int64    `path:"id"`
  Code          string  `json:"code,omitempty"`
  Enable        bool    `json:"enable,omitempty"`
  Name          string  `json:"name,omitempty"`
  PermissionIds []int64 `json:"permissionIds,omitempty"`
}

type PatchRoleOperateUserReq struct {
  Id      int64   `path:"id"`
  UserIds []int64 `json:"userIds"`
}

type AddPermissionReq struct {
  Type      string  `json:"type"`
  ParentId  int64  `json:"parentId,omitempty"`
  Name      string  `json:"name"`
  Code      string  `json:"code"`
  Path      string  `json:"path,omitempty"`
  Icon      string  `json:"icon,omitempty"`
  Layout    string  `json:"layout,omitempty"`
  Component string  `json:"component,omitempty"`
  Show      bool    `json:"show"`
  Enable    bool    `json:"enable"`
  KeepAlive bool    `json:"keepAlive"`
  Order     int64   `json:"order"`
}

type PatchPermissionReq struct {
  Id        int64   `path:"id"`
  Type      string  `json:"type"`
  ParentId  int64  `json:"parentId,optional"`
  Name      string  `json:"name"`
  Code      string  `json:"code"`
  Path      string  `json:"path,optional"`
  Icon      string  `json:"icon,optional"`
  Layout    string  `json:"layout,optional"`
  Component string  `json:"component,optional"`
  Show      int64   `json:"show"`
  Enable    int64   `json:"enable"`
  KeepAlive int64   `json:"keepAlive"`
  Order     int64   `json:"order"`
}

type UserListItem struct {
	ID         int       `json:"id"`
	Username   string    `json:"username"`
	Enable     bool       `json:"enable"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
	Gender   int    `json:"gender"`
	Avatar   string `json:"avatar"`
	Address  string `json:"address"`
	Email    string `json:"email"`
  	Roles []Role `json:"roles"`
}

type Role struct {
	ID     int    `json:"id"`
	Code   string `json:"code"`
	Name   string `json:"name"`
	Enable bool    `json:"enable"`
}


type UserListRes struct {
	PageData []UserListItem `json:"pageData"`
	Total    int64            `json:"total"`
}

type UserListReq struct {
	Gender   string `form:"gender,optional"`
	Enable   string `form:"enable,optional"`
	Username string `form:"username,optional"`
	PageNo   string `form:"pageNo"`
	PageSize string `form:"pageSize"`
}

@server(
	group: user 
)
service admin-api{
  @handler UserLogin
  post /auth/login (LoginReq)

  @handler UserCaptcha
  get /auth/captcha ()

  @handler UserLogout
  post /auth/logout ()

  @handler UserPassword
  post /auth/password (AuthPwReq)

  @handler UserList
  get /user (UserListReq) returns (UserListRes)

  @handler UserAdd
  post /user (AddUserReq)

  @handler UserDelete
  delete /user/:id ()

  @handler UserUpdatePassword
  patch /user/password/reset/:id ()

  @handler UserUpdate
  patch /user/:id (PatchUserReq)

  @handler UserProfile
  patch /user/profile/:id (PatchProfileUserReq)

  @handler UserDetail
  get /user/detail ()

  @handler RoleList
  get /role ()

  @handler RoleAdd
  post /role (AddRoleReq)

  @handler RoleUpdate
  patch /role/:id (PatchRoleReq)

  @handler RoleDelete
  delete /role/:id ()

  @handler RoleAddUser
  patch /role/users/add/:id (PatchRoleOperateUserReq)

  @handler RoleRemoveUser
  patch /role/users/remove/:id (PatchRoleOperateUserReq)

  @handler RoleListPage
  get /role/page ()

  @handler RolePermissionsTree
  get /role/permissions/tree ()

  @handler PermissionAdd
  post /permission (AddPermissionReq)

  @handler PermissionPatch
  patch /permission/:id (PatchPermissionReq)

  @handler PermissionDelete
  delete /permission/:id ()

  @handler PermissionListTree
  get /permission/tree ()

  @handler PermissionMenuTree
  get /permission/menu/tree ()
}